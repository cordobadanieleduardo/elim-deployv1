1. Crear Directorio
mkdir djcmpfc42
cd djcmpfc42

2. Clonar Proyecto



3. Acceder al Directorio
cd app

4. Crear Entorno Virtual
py -m venv ..\venv
..\venv\Scripts\activate.bat
pip freeze
    
5. Actualizar pip
python.exe -m pip install --upgrade pip


6. Instalar Dependencias

pip install Django==4.2.6 psycopg[binary] Pillow reportlab django-userforeignkey djangorestframework
pip install dj-database-url gunicorn PyPDF2 pylint xhtml2pdf python-decouple whitenoise

6.1 Instalar Dependencias sin Django

pip install Django psycopg[binary] Pillow reportlab django-userforeignkey djangorestframework

pip install psycopg[binary] Pillow reportlab django-userforeignkey djangorestframework
pip install django-filter
pip install xhtml2pdf
pip install django-userforeignkey
pip install dj-database-url gunicorn python-decouple whitenoise
py -m pip install python-decouple

# CONFIGURAR API google maps

pip install googlemaps

pip install djangorestframework
 # Markdown support for the browsable API.
pip install markdown      
# Filtering support
pip install django-filter  

asgiref==3.2.10
Django==3.0.8
pkg-resources==0.0.0
pytz==2020.1
sqlparse==0.3.1


7. Crear Base de Datos

psql -h 127.0.0.1 -p 5432 -U postgres
create database db_djfull;
\q


8. Crear archivo .env
SECRET_KEY=pzmaeg=(8-0#5yt^s#lk5+1km!h3jbg4wchu6souuv!9l#%2tc

9. En Settings.py
9.1 Configurar Nueva Base de Datos
9.2 Modificar

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
    DEBUG = True

10. Migrar
python manage.py migrate

11. Crear Super Usuario
python manage.py createsuperuser --username test --email test@mail.com

12. Levantar Servidor
py manage.py runserver 0.0.0.0:8000




13.  instala paquetete estaticos
py .\manage.py collectstatic






mkdir nuevo_elim
django-admin startproject bases nuevo_elim


py -m pip install django djangorestframework markdown django-filter

py -m pip install Django


python -m django startproject elim_project


py -m pip install dww

git clone 
cd proc
python -m venv ./venv
source venv/bin/activate
pip install -e .
pip install Django







…or create a new repository on the command line
echo "# desarrollo_elim_logistica" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/cordobadanieleduardo/desarrollo_elim_logistica.git
git push -u origin main



…or push an existing repository from the command line
git remote add origin https://github.com/cordobadanieleduardo/desarrollo_elim_logistica.git
git branch -M main
git push -u origin main

gratis
heroku ps:scale web=1

github.com
cordobadanieleduardo@gmail.com
Git2025*

heroku.com
Daniel3166186116*



Luego de haber separado los archivos de configuración, 
ya no podremos levantar de la misma forma el proyecto en local,
ahora tendremos que indicar qué archivo 

setting debe utilizar de la siguiente forma:

manage.py runserver --settings=app.local_settings


Como podrás ver, a manage.py le adjuntamos 
el parámetro --settings con el valor de la nueva configuración del archivo settings local.

Debes notar, que la ruta y nombre del archivo settings local abarca, 
la aplicación llamada app, un punto y luego el nombre del archivo settings,
sin extensión, ésto para que lo tomes en cuenta y modifiques 
según tu proyecto, ya sea app o el nombre del archivo


echo "# elim-deployv1" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/cordobadanieleduardo/elim-deployv1.git
git push -u origin main